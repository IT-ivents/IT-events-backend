openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/events/:
    get:
      operationId: listEvents
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: price__lte
        required: false
        in: query
        description: price__lte
        schema:
          type: string
      - name: price__gte
        required: false
        in: query
        description: price__gte
        schema:
          type: string
      - name: date__gte
        required: false
        in: query
        description: date__gte
        schema:
          type: string
      - name: date__lte
        required: false
        in: query
        description: date__lte
        schema:
          type: string
      - name: tag
        required: false
        in: query
        description: tag
        schema:
          type: string
      - name: formats
        required: false
        in: query
        description: formats
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      - name: city
        required: false
        in: query
        description: city
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventRead'
          description: ''
      tags:
      - api
    post:
      operationId: createEvent
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWrite'
          description: ''
      tags:
      - api
  /api/v1/events/favorites/:
    get:
      operationId: favoritesEvent
      description: "\u041C\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\
        \u043E\u0440 \u0434\u043B\u044F \u0432\u044B\u0432\u043E\u0434\u0430 \u0441\
        \u043F\u0438\u0441\u043A\u0430 \u0438\u0432\u0435\u043D\u0442\u043E\u0432\n\
        \u043D\u0430\u0445\u043E\u0434\u044F\u0449\u0438\u0445\u0441\u044F \u0432\
        \ \u0418\u0437\u0431\u0440\u0430\u043D\u043D\u043E\u043C \u043F\u043E\u043B\
        \u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWrite'
          description: ''
      tags:
      - api
  /api/v1/events/{id}/:
    get:
      operationId: retrieveEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0421\u043E\u0431\u044B\
          \u0442\u0438\u0435."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: price__lte
        required: false
        in: query
        description: price__lte
        schema:
          type: string
      - name: price__gte
        required: false
        in: query
        description: price__gte
        schema:
          type: string
      - name: date__gte
        required: false
        in: query
        description: date__gte
        schema:
          type: string
      - name: date__lte
        required: false
        in: query
        description: date__lte
        schema:
          type: string
      - name: tag
        required: false
        in: query
        description: tag
        schema:
          type: string
      - name: formats
        required: false
        in: query
        description: formats
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      - name: city
        required: false
        in: query
        description: city
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRead'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0421\u043E\u0431\u044B\
          \u0442\u0438\u0435."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: price__lte
        required: false
        in: query
        description: price__lte
        schema:
          type: string
      - name: price__gte
        required: false
        in: query
        description: price__gte
        schema:
          type: string
      - name: date__gte
        required: false
        in: query
        description: date__gte
        schema:
          type: string
      - name: date__lte
        required: false
        in: query
        description: date__lte
        schema:
          type: string
      - name: tag
        required: false
        in: query
        description: tag
        schema:
          type: string
      - name: formats
        required: false
        in: query
        description: formats
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      - name: city
        required: false
        in: query
        description: city
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWrite'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyEvent
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0421\u043E\u0431\u044B\
          \u0442\u0438\u0435."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - name: price__lte
        required: false
        in: query
        description: price__lte
        schema:
          type: string
      - name: price__gte
        required: false
        in: query
        description: price__gte
        schema:
          type: string
      - name: date__gte
        required: false
        in: query
        description: date__gte
        schema:
          type: string
      - name: date__lte
        required: false
        in: query
        description: date__lte
        schema:
          type: string
      - name: tag
        required: false
        in: query
        description: tag
        schema:
          type: string
      - name: formats
        required: false
        in: query
        description: formats
        schema:
          type: string
      - name: topic
        required: false
        in: query
        description: topic
        schema:
          type: string
      - name: city
        required: false
        in: query
        description: city
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/events/{id}/toggle_favorite/:
    get:
      operationId: toggleFavoriteEvent
      description: "\u041C\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\
        \u043E\u0440 \u0434\u043B\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u044F \u0438 \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F\
        \ \u0438\u0432\u0435\u043D\u0442\u043E\u0432\n\u0438\u0437 \u0418\u0437\u0431\
        \u0440\u0430\u043D\u043D\u043E\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\
        \u0432\u0430\u0442\u0435\u043B\u044F"
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0421\u043E\u0431\u044B\
          \u0442\u0438\u0435."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventWrite'
          description: ''
      tags:
      - api
  /api/v1/tags/:
    get:
      operationId: listTags
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/v1/tags/{id}/:
    get:
      operationId: retrieveTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/v1/topics/:
    get:
      operationId: listTopics
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
          description: ''
      tags:
      - api
  /api/v1/topics/{id}/:
    get:
      operationId: retrieveTopic
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0422\u043E\u043F\u0438\
          \u043A."
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
      tags:
      - api
  /api/v1/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/v1/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/v1/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/v1/auth/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/v1/auth/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        id:
          type: integer
          readOnly: true
    EventRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        image:
          type: string
          format: binary
          description: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0444\
            \u043E\u0442\u043E\u0433\u0440\u0430\u0444\u0438\u044E"
        program:
          type: string
          maxLength: 3000
        organizer:
          type: string
          maxLength: 100
        partners:
          type: string
          maxLength: 200
        address:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        city:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 200
          required:
          - name
        tags:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 200
              slug:
                type: string
                maxLength: 100
                pattern: ^[-a-zA-Z0-9_]+$
            required:
            - name
            - slug
        topic:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              maxLength: 200
            slug:
              type: string
              maxLength: 100
              pattern: ^[-a-zA-Z0-9_]+$
          required:
          - name
          - slug
        format:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 200
              slug:
                type: string
                maxLength: 100
                pattern: ^[-a-zA-Z0-9_]+$
            required:
            - name
            - slug
      required:
      - title
      - description
      - url
      - image
      - program
      - organizer
      - price
      - date_start
      - date_end
      - city
      - tags
      - topic
      - format
    EventWrite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 1000
        url:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        image:
          type: string
          format: binary
        program:
          type: string
          maxLength: 3000
        organizer:
          type: string
          maxLength: 100
        partners:
          type: string
          maxLength: 200
        address:
          type: string
          maxLength: 200
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 1000000
          minimum: -1000000
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        city:
          type: string
        tags:
          type: array
          items:
            type: string
        topic:
          type: string
        format:
          type: array
          items:
            type: string
      required:
      - title
      - description
      - url
      - image
      - program
      - organizer
      - price
      - date_start
      - date_end
      - city
      - tags
      - topic
      - format
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - slug
    Topic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - name
      - slug
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - email
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - current_password
      - new_email
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
